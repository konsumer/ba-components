// this file was auto-generated

import { makeComponentClass } from '../Component'
export const BaCamera = makeComponentClass({ 'name': 'Camera', 'props': [{ 'name': 'inputs', 'type': 'CameraInputsManager' }, { 'name': 'position', 'type': 'Vector3' }, { 'name': 'upVector', 'type': 'Vector3' }, { 'name': 'orthoLeft', 'type': 'Nullable' }, { 'name': 'orthoRight', 'type': 'Nullable' }, { 'name': 'orthoBottom', 'type': 'Nullable' }, { 'name': 'orthoTop', 'type': 'Nullable' }, { 'name': 'fov', 'type': 'Number' }, { 'name': 'minZ', 'type': 'Number' }, { 'name': 'maxZ', 'type': 'Number' }, { 'name': 'inertia', 'type': 'Number' }, { 'name': 'mode', 'type': 'Number' }, { 'name': 'isIntermediate', 'type': 'Boolean' }, { 'name': 'viewport', 'type': 'Viewport' }, { 'name': 'layerMask', 'type': 'Number' }, { 'name': 'fovMode', 'type': 'Number' }, { 'name': 'cameraRigMode', 'type': 'Number' }, { 'name': 'interaxialDistance', 'type': 'Number' }, { 'name': 'isStereoscopicSideBySide', 'type': 'Boolean' }, { 'name': 'customRenderTargets', 'type': ['RenderTargetTexture'] }, { 'name': 'onViewMatrixChangedObservable', 'type': 'Observable' }, { 'name': 'onProjectionMatrixChangedObservable', 'type': 'Observable' }, { 'name': 'onAfterCheckInputsObservable', 'type': 'Observable' }, { 'name': 'onRestoreStateObservable', 'type': 'Observable' }, { 'name': 'globalPosition', 'type': 'Vector3' }, { 'name': 'rigCameras', 'type': ['Camera'] }, { 'name': 'rigPostProcess', 'type': 'Nullable' }, { 'name': 'leftCamera', 'type': 'Nullable' }, { 'name': 'rightCamera', 'type': 'Nullable' }], 'args': [{ 'name': 'name', 'type': 'string' }, { 'name': 'position', 'type': 'Vector3' }, { 'name': 'scene', 'type': 'Scene' }, { 'name': 'setActiveOnSceneIfNoneActive', 'type': 'Boolean' }], 'family': 'cameras' })
window.customElements.define('ba-camera', BaCamera)
